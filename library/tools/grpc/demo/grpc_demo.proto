syntax = "proto3";//请在非空非注释的第一行指定当前文件使用的是proto3的语法,默认proto2

//package与go_package,java_package有些不同, java_package是定义编译生成的java文件所在的目录, 而package是对应的java类的命名空间,go_package是go的包名
package proto;
option go_package = ".;grpc";
option java_package = "com.xin.grpc.core";

option java_outer_classname = "GrpcDemoServiceProto";//要生成Java类的名称

//编译后会生成多个Message类, 并没有被包含在GrpcDemoServiceProto.java文件中,反之,生成单一GrpcDemoServiceProto.java文件
option java_multiple_files = false;

//服务端接口类
service GrpcDemoService {
  rpc GetName (Person) returns (Name); //服务端接口方法
  rpc AddOperation (Param) returns (Result);
}

//请求参数 基于序号的协议字段映射, 所以字段可以乱序, 可缺段
message Person {
  string firstName = 1;
  string lastName = 2;
}

message Name {
  string message = 1;
}

message Param {
  int32  x = 1;
  int32  y = 2;
}

message Result {
  int32  message = 1;
}